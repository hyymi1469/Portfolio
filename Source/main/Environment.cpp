#include "Environment.h"


////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief	생성자
/// 
/// @return	없음
////////////////////////////////////////////////////////////////////////////////////////////////////
Environment::Environment()
	:m_gameServerIp( "" ),
	m_gameServerPort( 0 ),
	m_logicThreadCount( 0 )
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief	소멸자
/// 
/// @return	없음
////////////////////////////////////////////////////////////////////////////////////////////////////
Environment::~Environment()
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief	게임서버 아이피를 설정한다.
/// 		
/// @param	gameServerIp  게임서버에 설정할 IP
///
/// @return	없음
////////////////////////////////////////////////////////////////////////////////////////////////////
void Environment::SetGameServerIp( const std::string& gameServerIp )
{
	m_gameServerIp = gameServerIp;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief	게임서버 아이피를 반환한다.
///
/// @return	게임서버 아이피
////////////////////////////////////////////////////////////////////////////////////////////////////
std::string Environment::GetGameServerIp()
{
	return m_gameServerIp;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief	게임서버 포트를 설정한다.
/// 		
/// @param	gameServerIp  게임서버에 설정할 IP
///
/// @return	없음
////////////////////////////////////////////////////////////////////////////////////////////////////
void Environment::SetGameServerPort( const int gameServerPort )
{
	m_gameServerPort = gameServerPort;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief	게임서버 포트를 반환한다.
///
/// @return	게임서버 포트
////////////////////////////////////////////////////////////////////////////////////////////////////
int Environment::GetGameServerPort() const
{
	return m_gameServerPort;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief	룸 스레드 갯수를 설정한다.
/// 		
/// @param	roomThreadCount  룸스레드 갯수
///
/// @return	없음
////////////////////////////////////////////////////////////////////////////////////////////////////
void Environment::SetLogicThreadCount( const short roomThreadCount )
{
	m_logicThreadCount = roomThreadCount;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief	룸 스레드 갯수를 반환한다.
///
/// @return	룸 스레드 갯수
////////////////////////////////////////////////////////////////////////////////////////////////////
int Environment::GetLogicThreadCount() const
{
	return m_logicThreadCount;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief	 I/O 스레드 갯수를 설정한다.
/// 		
/// @param	roomThreadCount  룸스레드 갯수
///
/// @return	없음
////////////////////////////////////////////////////////////////////////////////////////////////////
void Environment::SetIoThreadCount( const short ioThreadCount )
{
	m_ioThreadCount = ioThreadCount;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief	 I/O 스레드 갯수를 반환한다.
///
/// @return	룸 스레드 갯수
////////////////////////////////////////////////////////////////////////////////////////////////////
int Environment::GetIoThreadCount() const
{
	return m_ioThreadCount;
}
